{
  "testCases": [
    {
      "name": "Insert single element and search",
      "description": "Insert one value and verify search works correctly",
      "operations": [
        {"action": "insert", "value": 5},
        {"action": "search", "value": 5, "expected": true},
        {"action": "search", "value": 3, "expected": false}
      ]
    },
    {
      "name": "Insert multiple elements",
      "description": "Insert multiple values and verify all can be found",
      "operations": [
        {"action": "insert", "values": [5, 3, 7, 2, 4, 6, 8]},
        {"action": "searchAll", "values": [5, 3, 7, 2, 4, 6, 8], "expected": true}
      ]
    },
    {
      "name": "InOrder traversal returns sorted values",
      "description": "Verify inorder traversal returns values in ascending order",
      "operations": [
        {"action": "insert", "values": [5, 3, 7, 2, 4, 6, 8]},
        {"action": "inOrderTraversal", "expected": [2, 3, 4, 5, 6, 7, 8]}
      ]
    },
    {
      "name": "Delete leaf node",
      "description": "Delete a node with no children",
      "operations": [
        {"action": "insert", "values": [5, 3, 7, 2, 4]},
        {"action": "delete", "value": 2},
        {"action": "search", "value": 2, "expected": false},
        {"action": "inOrderTraversal", "expected": [3, 4, 5, 7]}
      ]
    },
    {
      "name": "Delete node with one child",
      "description": "Delete a node with exactly one child",
      "operations": [
        {"action": "insert", "values": [5, 3, 7, 6]},
        {"action": "delete", "value": 7},
        {"action": "search", "value": 7, "expected": false},
        {"action": "inOrderTraversal", "expected": [3, 5, 6]}
      ]
    },
    {
      "name": "Delete node with two children",
      "description": "Delete a node with two children",
      "operations": [
        {"action": "insert", "values": [5, 3, 7, 2, 4, 6, 8]},
        {"action": "delete", "value": 3},
        {"action": "search", "value": 3, "expected": false},
        {"action": "inOrderTraversal", "expected": [2, 4, 5, 6, 7, 8]}
      ]
    },
    {
      "name": "Delete root node",
      "description": "Delete the root node of the tree",
      "operations": [
        {"action": "insert", "values": [5, 3, 7, 2, 4, 6, 8]},
        {"action": "delete", "value": 5},
        {"action": "search", "value": 5, "expected": false},
        {"action": "inOrderTraversal", "expected": [2, 3, 4, 6, 7, 8]}
      ]
    },
    {
      "name": "Operations on empty tree",
      "description": "Test operations on an empty tree",
      "operations": [
        {"action": "search", "value": 1, "expected": false},
        {"action": "inOrderTraversal", "expected": []},
        {"action": "delete", "value": 1, "note": "Should not crash"}
      ]
    },
    {
      "name": "Insert duplicate values",
      "description": "Insert duplicate values - BST should ignore them",
      "operations": [
        {"action": "insert", "value": 5},
        {"action": "insert", "value": 5},
        {"action": "insert", "value": 3},
        {"action": "insert", "value": 3},
        {"action": "inOrderTraversal", "expected": [3, 5]}
      ]
    },
    {
      "name": "Operations on single node tree",
      "description": "Test all operations on a tree with one node",
      "operations": [
        {"action": "insert", "value": 42},
        {"action": "search", "value": 42, "expected": true},
        {"action": "inOrderTraversal", "expected": [42]},
        {"action": "delete", "value": 42},
        {"action": "search", "value": 42, "expected": false},
        {"action": "inOrderTraversal", "expected": []}
      ]
    }
  ]
}